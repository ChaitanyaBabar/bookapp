name: Print Release Notes

on:
  workflow_dispatch:  # This allows manual triggering with branch selection from a dropdown
    inputs:
      branch:
        description: 'Branch to generate release notes from'
        required: true  # The user must select a branch

jobs:
  generate-release-notes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch }}  # Use the branch selected when triggering the action

      - name: Print the selected branch
        run: |
          echo "Selected branch: ${{ github.event.inputs.branch }}"  # Print the selected branch

      - name: Generate release notes from commit history
        run: |
          BRANCH="${{ github.event.inputs.branch }}"
          BASE_BRANCH="master"  # Default base branch is 'master'

          echo "Generating release notes for branch: $BRANCH"

          # Print the value of github.head_ref to see what it refers to
          echo "github.head_ref: ${{ github.head_ref }}"  # Print github.head_ref

          # Find the common ancestor between the input branch and the base branch (master)
          MERGE_BASE=$(git merge-base origin/$BASE_BRANCH origin/$BRANCH)

          if [ -z "$MERGE_BASE" ]; then
            echo "No common ancestor found between $BASE_BRANCH and $BRANCH."
            exit 1
          fi

          # Get the commits between the base branch and the input branch
          NOTES=$(git log --pretty=format:"- %s (%an)" $MERGE_BASE..origin/$BRANCH)

          if [ -z "$NOTES" ]; then
            echo "No new commits found to generate release notes."
            echo "### Release Notes for \`$BRANCH\`" >> $GITHUB_STEP_SUMMARY
            echo "_No new changes detected._" >> $GITHUB_STEP_SUMMARY
          else
            echo "### Release Notes for \`$BRANCH\`" >> $GITHUB_STEP_SUMMARY
            echo "$NOTES" >> $GITHUB_STEP_SUMMARY
          fi
