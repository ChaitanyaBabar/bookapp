name: Print Release Notes

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch to generate release notes from'
        required: true
        default: 'master'

jobs:
  generate-release-notes:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.branch || 'master' }}

      - name: Print the selected branch
        run: |
              echo "Selected branch: ${{ github.event.inputs.branch || 'master' }}"

      - name: Generate clean release notes with commit links
        run: |
          BRANCH="${{ github.event.inputs.branch || 'master' }}"
          BASE_BRANCH="master"
          REPO_URL="https://github.com/ChaitanyaBabar/bookapp"
          TRACK_FILE=".last_release_commit"

          echo "Generating release notes for branch: $BRANCH"
          git fetch origin

          # Determine base commit
          if git show origin/$BRANCH:$TRACK_FILE > /dev/null 2>&1; then
            BASE_COMMIT=$(git show origin/$BRANCH:$TRACK_FILE)
            echo "Using last release commit hash from $TRACK_FILE: $BASE_COMMIT"
          else
            BASE_COMMIT=$(git merge-base origin/$BASE_BRANCH origin/$BRANCH)
            echo "No previous release hash found. Using merge-base: $BASE_COMMIT"
          fi

          # Generate release notes
          NOTES=$( (git log --pretty=format:"- %s ([%h]($REPO_URL/commit/%H)) (%an, %ad)" --date=short "^$BASE_COMMIT" "origin/$BRANCH" | grep -v "Update last release commit") || true )

          echo "### Release Notes for \`$BRANCH\`" >> $GITHUB_STEP_SUMMARY
          if [ -z "$NOTES" ]; then
            echo "_No new changes detected._" >> $GITHUB_STEP_SUMMARY
          else
            echo "$NOTES" >> $GITHUB_STEP_SUMMARY
          fi

          # Store latest meaningful commit (excluding bot commits)
          LATEST_COMMIT=$(git log --pretty=format:"%H %s" origin/$BRANCH | grep -v "Update last release commit" | head -n 1 | cut -d' ' -f1)

          echo "$LATEST_COMMIT" > $TRACK_FILE

      - name: Commit updated release tracking file
        run: |
          BRANCH="${{ github.event.inputs.branch }}"
      
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
      
          git add .last_release_commit
          git diff --cached --quiet || git commit -m "Update last release commit for $BRANCH"
      
          git push origin HEAD:$BRANCH

